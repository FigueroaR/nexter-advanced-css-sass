.header {
  background-color: $color-grey-dark-1; // <-- background color
  grid-column: full-start / col-end 6; // it ends after the 6th column

  // although we have set u a background color, this image will overide that and provide us a background image
  background-image: linear-gradient(rgba($color-secondary, .93), rgba($color-secondary, .93)), url(../img/hero.jpeg);
  background-size: cover;
  background-position: center;
  padding: 8rem; // on all sides
  padding-top: 4rem; // on top only

  display: grid;
  grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr; // minmax(min is 6 rem, fit the content in the row ) 
  grid-template-columns: mminmax(min-content, max-content ); // to only have the width on the content // the grid will becomes as large as it needs to to display its content , one large column, vice versa
  grid-row-gap: 1.5rem;
  justify-content: center; // x axis


  &__logo {
    height: 3rem;
    justify-self: center; // x axis
  }

  &__btn {
    align-self: start; //vert y axis cross axis
    justify-self: start; //x axis
    }

  &__seenon-text {
    // even text can be a grid item and also pseudo elemtns
    display: grid;
    grid-template-columns: 1fr max-content 1fr;
    grid-column-gap: 1.5rem;
    align-items: center;
    //padding-top: 18rem;

    font-size: 1.6rem;
    color: $color-grey-light-2;

    &::before,
    &::after {
      content: "";
      height: 1px;
      display: block;
      background-color: currentColor; // here we inherit the color of the parent text
    }
  }

  &__seenon-logo {
    display: grid;
    grid-template-columns: repeat(4, 1fr); // we are creating agrid and placing each logo as we want
    grid-gap: 3rem; // we create space to separate thema  bit 
    justify-items: center; // x axis
    align-items: center; // y axis, individual items in each cell
    img {
      max-height: 2.5rem; 
      max-width: 100%;
      filter: brightness(70%); // 100% default to self, less #% means darker
    }
  }
}